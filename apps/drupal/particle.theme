<?php

/**
 * @file
 * Functions to support theming in the Particle theme.
 */

/**
 * Implements hook_preprocess_region().
 */
function particle_preprocess_region__header(&$variables) {
  // Blocks contains list of blocks we want to call individually in Twig.
  // Example, {{ content }} => {{ branding }}
  $blocks = [
    'branding' => 'particle_sitebranding',
  ];
  foreach ($blocks as $key => $value) {
    $pattern = '/^' . $value . '/';
    foreach ($variables['elements'] as $el_key => $el_value) {
      if(preg_match($pattern, $el_key)) {
        $variables[$key] = $variables['elements'][$el_key];
        break;
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function particle_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Provide suggestion for block templates by custom block type.
  if (!empty($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content'];
    // Add `block--BLOCK-TYPE.html.twig`
    $suggestions[] = 'block__' . $block->bundle();
    $view_mode = $variables['elements']['#configuration']['view_mode'];
    if (!empty($view_mode)) {
      // Add `block--BLOCK-TYPE--VIEW-MODE.html.twig`
      $suggestions[] = 'block__' . $block->bundle() . '__' . $view_mode;
    }
  }
}

/**
 * Implements hook_preprocess_block().
 */
function particle_preprocess_block__system_branding_block(&$variables) {
  $logo_default = theme_get_setting('logo.use_default');
  $logo_url = theme_get_setting('logo.url');

  // Set the logo to PL if default.
  if ($logo_default) {
    $variables['logo_svg_inline'] = '@atoms/image/logo.svg';
    // Send to img if Logo is not an default.
  } else {
    $variables['logo_img_src'] = $logo_url;
  }
}

/**
 * Implements hook_preprocess_block().
 */
function particle_preprocess_block__system_powered_by_block(&$variables) {
  $variables['content']['#markup'] = '<p>&copy; Phase2 ' . date('Y') . '</p>';
}
