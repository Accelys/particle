<?php

/**
 * @file
 * Functions to support theming in the Particle theme.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function particle_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Provide suggestion for block templates by custom block type.
  if (!empty($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content'];
    // Add `block--BLOCK-TYPE.html.twig`
    $suggestions[] = 'block__' . $block->bundle();
    $view_mode = $variables['elements']['#configuration']['view_mode'];
    if (!empty($view_mode)) {
      // Add `block--BLOCK-TYPE--VIEW-MODE.html.twig`
      $suggestions[] = 'block__' . $block->bundle() . '__' . $view_mode;
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function particle_theme_suggestions_image_alter(array &$suggestions, array $variables) {
  $node = \Drupal::request()->attributes->get('node');
  if (!empty($node)) {
    $suggestions[] = 'image__' . $node->getType();
  }
}

/**
 * Implements hook_preprocess_block().
 */
function particle_preprocess_block__system_branding_block(&$variables) {
  $logo_default = theme_get_setting('logo.use_default');
  $logo_url = theme_get_setting('logo.url');

  // Set the logo to PL if default.
  if ($logo_default) {
    $variables['logo_svg_inline'] = '@atoms/image/logo.svg';
    // Send to img if Logo is not an default.
  } else {
    $variables['logo_img_src'] = $logo_url;
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 */
function particle_preprocess_breadcrumb(&$variables) {
  if (($node = \Drupal::routeMatch()->getParameter('node')) && $variables['breadcrumb']) {
    $variables['breadcrumb'][] = [
      'text' => $node->getTitle()
    ];
  }
}

/**
 * Implements hook_preprocess_user().
 */
function particle_preprocess_user(&$variables) {
  $variables['content']['member_for']['#markup'] = '';
}

/**
 * Implements hook_preprocess_page().
 */
function particle_preprocess_page(&$variables) {

  $messages = [
    'warning',
    'status',
    'error',
    'info',
  ];

  foreach ($messages as $message) {
    drupal_set_message(t('Status: <span>%string</span>',
      [
        '%string' => 'This is a ' . $message . ' message. Remove me in particle.theme!',
      ]
    ), $message);
  }

}
